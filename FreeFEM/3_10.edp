int CB=3;
real w1 = 1.623, h1 = 0.26, w2 = 0.494, w3 = 1.09, h2 = 0.2, w4 = 0.983, Or=4, Ir=2;

int CB=3;
real w1 = 1.623, h1 = 0.26, w2 = 0.494, w3 = 1.09, h2 = 0.2, w4 = 0.983, Or=4, Ir=2;



int CA=4;

border bottomA(t=-Or,Or){ x=t; y=h1+w1+2*w2+4*w3+3*h2+w4; label=CA;};
border rightA(t=h1+w1+2*w2+4*w3+3*h2+w4,2*h1+w1+2*w2+4*w3+3*h2+w4){ x=Or; y=t; label=CA;};
border topA(t=Or,-Or){ x=t; y=2*h1+w1+2*w2+4*w3+3*h2+w4; label=CA;};
border leftA(t=2*h1+w1+2*w2+4*w3+3*h2+w4,h1+w1+2*w2+4*w3+3*h2+w4){ x=-Or; y=t; label=CA;};


int CK=5;

border bottomK(t=-Or,Or){ x=t; y=0; label=CK;};
border rightK(t=0,h1){ x=Or; y=t; label=CK;};
border topK(t=Or,-Or){ x=t; y=h1; label=CK;};
border leftK(t=h1,0){ x=-Or; y=t; label=CK;};


int CDL=6;

border bottomDL(t=-Or,-Ir){ x=t; y=h1+w1+w2+4*w3+3*h2; label=CDL;};
border rightDL(t=h1+w1+w2+4*w3+3*h2,h1+w1+2*w2+4*w3+3*h2){ x=-Ir; y=t; label=CDL;};
border topDL(t=-Ir,-Or){ x=t; y=h1+w1+2*w2+4*w3+3*h2; label=CDL;};
border leftDL(t=h1+w1+2*w2+4*w3+3*h2,h1+w1+w2+4*w3+3*h2){ x=-Or; y=t; label=CDL;};



int CDR=7;

border bottomDR(t=Ir,Or){ x=t; y=h1+w1+w2+4*w3+3*h2; label=CDR;};
border rightDR(t=h1+w1+w2+4*w3+3*h2,h1+w1+2*w2+4*w3+3*h2){ x=Or; y=t; label=CDR;};
border topDR(t=Or,Ir){ x=t; y=h1+w1+2*w2+4*w3+3*h2; label=CDR;};
border leftDR(t=h1+w1+2*w2+4*w3+3*h2,h1+w1+w2+4*w3+3*h2){ x=Ir; y=t; label=CDR;};



int CEL=8;

border bottomEL(t=-Or,-Ir){ x=t; y=h1+w1+w2+3*w3+3*h2; label=CEL;};
border rightEL(t=h1+w1+w2+3*w3+3*h2,h1+w1+w2+3*w3+2*h2){ x=-Ir; y=t; label=CEL;};
border topEL(t=-Ir,-Or){ x=t; y=h1+w1+w2+3*w3+2*h2; label=CEL;};
border leftEL(t=h1+w1+w2+3*w3+2*h2,h1+w1+w2+3*w3+3*h2){ x=-Or; y=t; label=CEL;};



int CER=9;

border bottomER(t=Ir,Or){ x=t; y=h1+w1+w2+3*w3+3*h2; label=CER;};
border rightER(t=h1+w1+w2+3*w3+3*h2,h1+w1+w2+3*w3+2*h2){ x=Or; y=t; label=CER;};
border topER(t=Or,Ir){ x=t; y=h1+w1+w2+3*w3+2*h2; label=CER;};
border leftER(t=h1+w1+w2+3*w3+2*h2,h1+w1+w2+3*w3+3*h2){ x=Ir; y=t; label=CER;};



border EnCDLosure(t=0,2*pi){x=10*cos(t); y=10*sin(t); label=CB;};
int n=10;

mesh Th = buildmesh(EnCDLosure(3*n)+ bottomA(-Or*n)+topA(-Or*n)+rightA(-(2*h1+w1+2*w2+4*w3+3*h2+w4)*n)+leftA(-(2*h1+w1+2*w2+4*w3+3*h2+w4)*n)) + bottomK(-Or*n)+topK(-Or*n)+rightK(-(h1)*n)+leftK(-(h1)*n)) + bottomDL(-Or*n)+topDL(-Or*n)+rightDL(-(h1+w1+2*w2+4*w3+3*h2)*n)+leftDL(-(h1+w1+2*w2+4*w3+3*h2)*n)) + bottomDR(Ir*n)+topDR(Ir*n)+rightDR(-(h1+w1+2*w2+4*w3+3*h2)*n)+leftDR(-(h1+w1+2*w2+4*w3+3*h2)*n)) + bottomEL(-Or*n)+topEL(-Or*n)+rightEL(-(h1+w1+w2+3*w3+2*h2)*n)+leftEL(-(h1+w1+w2+3*w3+2*h2)*n)) + bottomER(Ir*n)+topER(Ir*n)+rightER(-(h1+w1+w2+3*w3+2*h2)*n)+leftER(-(h1+w1+w2+3*w3+2*h2)*n)));
fespace Vh(Th,P1);

Vh u,v;
real u0=1000;

problem Electro(u,v) =
          int2d(Th)(dx(u)*dx(v) + dy(u)*dy(v))
        + on(CA,u=u0)+on(CK,u=-u0)+on(CDL,u=0)+on(CDR,u=0)+on(CER,u=0)+on(CEL,u=0);

real error=0.01;
for (int i=0;i<1;i++){
   Electro;
   Th=adaptmesh(Th,u,err=error);
   error=error/2.0;
}
Electro;

Vh Ex, Ey;
Ex = -dx(u);
Ey = -dy(u);

plot(u,value=true);
